#!/bin/bash
# vim:sw=4:ts=4:et
set -e
ME=30-authorized-keys
PROXY_USER="${PROXY_USER:-toor}"
PROXY_USER_HOME="/tmp/${PROXY_USER}"
PROXY_USER_SSH_DIR="${PROXY_USER_HOME}/.ssh"
AUTHORIZED_KEYS_FILE="${AUTHORIZED_KEYS_FILE:-/run/secrets/authorized_keys}"

entrypoint_log() {
	if [ -z "${ENTRYPOINT_QUIET_LOGS:-}" ]; then
		echo "$ME: $@"
	fi
}

function import_authorized_keys() {
	local in_dir="$1"
	local out_file="$2"

	# Create the authorized_keys file if it does not exist
	if [ ! -f "${out_file}" ]; then
		mkdir -p "$(dirname ${out_file})"
		touch "${out_file}"
	fi

	for file in ${in_dir}/*; do
		test -f "${file}" && {
			entrypoint_log "INFO: Importing public key: \"${file}\""
			# verify that the file is a valid ssh public key
			ssh-keygen -l -f "${file}" > /dev/null 2>&1 || {
				entrypoint_log "ERROR: \"${file}\" is not a valid ssh public key"
				continue
			}
			# Concatenate the file to the authorized_keys file
			cat "${file}" >> ${out_file}
		}
	done
}

entrypoint_log "INFO: Import authorized keys from \"/authorized_keys.d\" directory..."
import_authorized_keys "/authorized_keys.d" "/etc/ssh/authorized_keys"

entrypoint_log "INFO: Set up monitoring on \"/authorized_keys.d\" directory..."
inotifywait --quiet -r -m -e create,delete "/authorized_keys.d" |
	while read directory event filename; do
		entrypoint_log "INFO: Detected change in \"/authorized_keys.d\" directory..."
		# Refresh authorized keys from /authorized_keys.d directory
		import_authorized_keys "/authorized_keys.d" "/etc/ssh/authorized_keys2"
		# Remove previous authorized_keys file and rename authorized_keys2 to authorized_keys
		rm "/etc/ssh/authorized_keys"
		mv "/etc/ssh/authorized_keys2" "/etc/ssh/authorized_keys"
	done
