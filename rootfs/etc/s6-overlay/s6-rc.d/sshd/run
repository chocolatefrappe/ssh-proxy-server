#!/bin/bash
# vim:sw=4:ts=4:et

set -e

ME=sshd

entrypoint_log() {
	if [ -z "${ENTRYPOINT_QUIET_LOGS:-}" ]; then
		echo "$ME: $@"
	fi
}

{
	PROXY_USER="${PROXY_USER:-docker}"
	PROXY_USER_SSH_DIR="/${PROXY_USER}/.ssh"
	AUTHORIZED_KEYS_FILE="${AUTHORIZED_KEYS_FILE:-/run/secrets/authorized_keys}"

	entrypoint_log "INFO: Assigning random password to root..."
	echo "root:`uuidgen`" | chpasswd

	entrypoint_log "INFO: Creating user ${PROXY_USER}..."
	mkdir -p /${PROXY_USER} && {
		addgroup ${PROXY_USER}
		adduser --ingroup ${PROXY_USER} --shell /bin/false --home /${PROXY_USER} --no-create-home --gecos ${PROXY_USER} --disabled-password ${PROXY_USER}
		usermod -p '*' ${PROXY_USER}
		chown -R ${PROXY_USER}:${PROXY_USER} /${PROXY_USER}
		chmod -R 700 /${PROXY_USER}
	}

	entrypoint_log "INFO: Preparing ssh keys..."
	if [ -d "${PROXY_USER_SSH_DIR}" ]; then
		rm -rf "${PROXY_USER_SSH_DIR}"
	fi

	mkdir -p ${PROXY_USER_SSH_DIR} && {
		chmod -R 700 "${PROXY_USER_SSH_DIR}"
		chown -R ${PROXY_USER}:${PROXY_USER} "${PROXY_USER_SSH_DIR}"
	}

	if [ -f "${AUTHORIZED_KEYS_FILE}" ]; then
		entrypoint_log "INFO: Linking authorized_keys file..."
		cp "${AUTHORIZED_KEYS_FILE}" "${PROXY_USER_SSH_DIR}/authorized_keys"
		chmod 600 "${PROXY_USER_SSH_DIR}/authorized_keys"
		chown -R ${PROXY_USER}:${PROXY_USER} "${PROXY_USER_SSH_DIR}/authorized_keys"
	fi
}

{
	# check if host keys exist in /keys directory
	if [ -f /keys/ssh_host_rsa_key ]; then
		entrypoint_log "INFO: Copying host keys from /keys directory..."
		cp -f /keys/ssh_host_* /etc/ssh
		chmod 600 /etc/ssh/ssh_host_*
	else
		entrypoint_log "INFO: Generate new host keys..."
		ssh-keygen -A | while read -r line; do
			entrypoint_log "INFO: $line"
		done
		cp -f /etc/ssh/ssh_host_* /keys
	fi
}

entrypoint_log "INFO: Starting service..."
/usr/sbin/sshd -e -D
